'use strict';

// ------------------------------------------------------------------
// APP INITIALIZATION
// ------------------------------------------------------------------

const { App } = require('jovo-framework');
const { Alexa } = require('jovo-platform-alexa');
const { GoogleAssistant } = require('jovo-platform-googleassistant');
const { JovoDebugger } = require('jovo-plugin-debugger');
const { FileDb } = require('jovo-db-filedb');
const { GoogleSheetsCMS } = require('jovo-cms-googlesheets');

const app = new App();

app.use(
    new Alexa(),
    new GoogleAssistant(),
    new JovoDebugger(),
    new FileDb(),
    new GoogleSheetsCMS()
);


// ------------------------------------------------------------------
// APP LOGIC
// ------------------------------------------------------------------

app.setHandler({
    LAUNCH() {
        return this.toIntent('greetingIntent');
    },

	greetingIntent() {
		this.ask(this.t('greeting.speech'), this.t('anythingelse.speech'));
	},

	infoBookReturnsIntent() {
		this.ask(this.t('info.returns'), this.t('anythingelse.speech'));
	},

	infoLostCardIntent() {
		this.ask(this.t('info.lostcard'), this.t('anythingelse.speech'));
	},

	infoJusticeIntent() {
		this.ask(this.t('info.justicepeace'), this.t('anythingelse.speech'));
	},

	infoCabHoursIntent() {
		this.ask(this.t('info.cabhours'), this.t('anythingelse.speech'));
	},

	infoPrintingIntent() {
		this.ask(this.t('info.printing'), this.t('anythingelse.speech'));
	},

	infoItemBorrowLimitIntent() {
		this.ask(this.t('info.itemborrowlimit'), this.t('anythingelse.speech'));
	},

	infoThreeDPrintIntent() {
		this.ask(this.t('info.3dprint'), this.t('anythingelse.speech'));
	},

	infoLyndaDotComIntent() {
		this.ask(this.t('info.lyndadotcom'), this.t('anythingelse.speech'));
	},

	infoDataSourceIntent() {
		this.ask(this.t('info.whatdatasource'), this.t('anythingelse.speech'));
	},

	infoWhereDataSourceIntent() {
		this.ask(this.t('info.wheredatasource'), this.t('anythingelse.speech'));
	},

	infoUpdatingDataSourceIntent() {
		this.ask(this.t('info.updatingdatasource'), this.t('anythingelse.speech'));
	},

	infoBusinessProcessIntent() {
		this.ask(this.t('info.businessprocess'), this.t('anythingelse.speech'));
	},

	siteOpensIntent() {
//		this.tell(this.$inputs.sitename.value + ' is open at blah');

		let speech = 'Hmm, ' + this.$inputs.sitename.value + ' doesn\'t ring a bell';
		console.log(this.$inputs.sitename.value + ' -----------------------');
		console.log(this.$inputs.whenDate + ' --------------------');
		//console.log(this.$cms.OPENCLOSE);

		try {
			// find this site in our spreadsheet - if not siteobj is undefined > error
			let siteobj = this.$cms.OPENCLOSE.find(o => o.site === this.$inputs.sitename.value);

			// we now have the open and close hours of the site by day.
			// so check if now() is inside those hours
			// now.dayofweek;
			// dayofweekopen < now.hour < dayofweekclose
			speech = "In Dev " + siteobj.site + " opens at " + siteobj.mondayopen + '. Sample data only';
			console.log(siteobj.site + " " + siteobj.mondayopen + ' --------------------------------');

		}
		//reprompt
		catch (e) {
			console.log('not one \'oh mine...--------------------------------------------')
		}

		this.ask(this.t(speech), this.t('anythingelse.speech'));
	},

	whenSiteOpenIntent() {
 		console.log(this.$inputs.whenDate + ' --------------');
	},

	failBackIntent() {
		let speech = "hmm you what now?";
		this.ask(this.t(speech));
	},
});

module.exports.app = app;
